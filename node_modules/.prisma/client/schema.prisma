generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  revenue       Decimal         @db.Decimal(15, 2)
  expenses      Decimal         @db.Decimal(15, 2)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  updated_at    DateTime?       @default(now()) @db.Timestamp(6)
  company_goals company_goals[]
  goals         goals[]
  transactions  transactions[]
  users         users[]
}

model company_goals {
  id          Int        @id @default(autoincrement())
  company_id  Int?
  goal_value  Decimal    @db.Decimal(15, 2)
  description String     @db.VarChar(255)
  deadline    DateTime   @db.Date
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  updated_at  DateTime?  @default(now()) @db.Timestamp(6)
  companies   companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model goals {
  id          Int        @id @default(autoincrement())
  company_id  Int?
  goal_value  Decimal    @db.Decimal(15, 2)
  description String     @db.VarChar(255)
  deadline    DateTime   @db.Date
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  updated_at  DateTime?  @default(now()) @db.Timestamp(6)
  companies   companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model transaction_details {
  id             Int           @id @default(autoincrement())
  transaction_id Int?
  detail_type    String        @db.VarChar(255)
  detail_value   Decimal       @db.Decimal(15, 2)
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  updated_at     DateTime?     @default(now()) @db.Timestamp(6)
  transactions   transactions? @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model transactions {
  id                  Int                   @id @default(autoincrement())
  company_id          Int?
  type                String                @db.VarChar(20)
  amount              Decimal               @db.Decimal(15, 2)
  description         String                @db.VarChar(255)
  transaction_date    DateTime              @db.Date
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  transaction_details transaction_details[]
  companies           companies?            @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  email      String     @unique @db.VarChar(255)
  password   String     @db.VarChar(255)
  role       String     @db.VarChar(20)
  company_id Int?
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  name       String
  id         String     @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
